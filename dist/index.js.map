{"version":3,"sources":["../src/index.js"],"names":["express","require","app","fs","readline","google","SCOPES","TOKEN_PATH","valuea","exchange","volume","type","namew","readFile","err","content","console","log","authorize","JSON","parse","writeData","credentials","callback","client_secret","client_id","redirect_uris","installed","oAuth2Client","auth","OAuth2","token","getNewToken","setCredentials","authUrl","generateAuthUrl","access_type","scope","rl","createInterface","input","process","stdin","output","stdout","question","code","close","getToken","error","writeFile","stringify","sheets","version","values","resource","spreadsheets","append","spreadsheetId","range","valueInputOption","result","data","updates","updatedCells","updatedRange","listMajors","tt","get","res","rows","length","map","row","bodyParser","use","urlencoded","extended","json","post","req","body","price","name","end","server","listen","host","address","port"],"mappings":"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","sourcesContent":["var express = require('express');\nvar app = express();\n//var fs = require(\"fs\");\nconst fs = require('fs');\nconst readline = require('readline');\nconst {google} = require('googleapis');\nconst SCOPES = ['https://www.googleapis.com/auth/spreadsheets'];\n\nconst TOKEN_PATH = 'token.json';\nvar valuea=\"\";\nvar exchange=\"\";\nvar volume=\"\";\nvar type=\"\";\nvar namew=\"\";\nfs.readFile('credentials.json', (err, content) => {\n    if (err) return console.log('Error loading client secret file:', err);\n    authorize(JSON.parse(content), writeData);\n  });\n  \n  function authorize(credentials, callback) {\n    const {client_secret, client_id, redirect_uris} = credentials.installed;\n    const oAuth2Client = new google.auth.OAuth2(\n        client_id, client_secret, redirect_uris[0]);\n  \n    fs.readFile(TOKEN_PATH, (err, token) => {\n      if (err) return getNewToken(oAuth2Client, callback);\n      oAuth2Client.setCredentials(JSON.parse(token));\n      callback(oAuth2Client);\n    });\n  }\n  function getNewToken(oAuth2Client, callback) {\n    const authUrl = oAuth2Client.generateAuthUrl({\n      access_type: 'offline',\n      scope: SCOPES,\n    });\n    console.log('Authorize this app by visiting this url:', authUrl);\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n    rl.question('Enter the code from that page here: ', (code) => {\n      rl.close();\n      oAuth2Client.getToken(code, (err, token) => {\n        if (err) return console.error('Error while trying to retrieve access token', err);\n        oAuth2Client.setCredentials(token);\n        fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n          if (err) return console.error(err);\n          console.log('Token stored to', TOKEN_PATH);\n        });\n        callback(oAuth2Client);\n      });\n    });\n  }  \n  function writeData(auth) {\n    const sheets = google.sheets({ version: 'v4', auth });\n    let values = [\n        [\n            valuea,\n            exchange,\n            volume,\n            namew,\n            type,\n            'Baseball'\n        ],\n        // Potential next row\n    ];\n    const resource = {\n        values,\n    };\n    sheets.spreadsheets.values.append({\n        spreadsheetId: '1HoQiP9gc1OhHRz9SXcQoa1e28WDKqnFbKExFKssdcrQ',\n        range: 'Sheet3!A1',\n        valueInputOption: 'RAW',\n        resource: resource,\n    }, (err, result) => {\n        if (err) {\n            // Handle error\n            console.log(err);\n        } else {\n            console.log('%d cells updated on range: %s', result.data.updates.updatedCells, result.data.updates.updatedRange);\n        }\n    });\n}\n\n  function listMajors(auth,tt) {\n    const sheets = google.sheets({ version: 'v4', auth });\n    sheets.spreadsheets.values.get({\n        spreadsheetId: '1HoQiP9gc1OhHRz9SXcQoa1e28WDKqnFbKExFKssdcrQ',\n        range: 'Sheet1!A2:I',\n    }, (err, res) => {\n        if (err) return console.log('The API returned an error: ' + err);\n        const rows = res.data.values;\n        if (rows.length) {\n            console.log('Name, Major:');\n            // Print columns A and E, which correspond to indices 0 and 4.\n            rows.map((row) => {\n                console.log(`${row[0]}, ${row[4]}`);\n            });\n        } else {\n            console.log('No data found.');\n        }\n    });\n} \n\nvar bodyParser = require(\"body-parser\");\n\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(bodyParser.json());\n\napp.post('/buyorder', function (req, res) {\n    valuea=JSON.stringify(req.body.price);\n    type=JSON.stringify(req.body.type);\n    exchange=JSON.stringify(req.body.exchange);\n    namew=JSON.stringify(req.body.name);\n    volume=JSON.stringify(req.body.volume);\n    \n    console.log(valuea);\n\n    // First read existing users.\n    //fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) {\n      // var users = JSON.parse( data );\n      // var user = users[\"user\" + req.params.id] \n       //console.log( req.params.id );\n       fs.readFile('credentials.json', (err, content) => {\n        if (err) return console.log('Error loading client secret file:', err);\n        authorize(JSON.parse(content), writeData);\n      });\n       //console.log( req.params.tt );\n      // res.end( JSON.stringify(user));\n   // });\n   res.end(JSON.stringify(\"avs\"));\n })\nvar server = app.listen(8081, function () {\n   var host = server.address().address\n   var port = server.address().port\n   console.log(\"Example app listening at http://%s:%s\", host, port)\n})"],"file":"index.js"}